name: CI
on: push
jobs:
  job1:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Set node version to 16
      uses: actions/setup-node@v2
      with:
        node-version: 16
    - run: npm i -g zx
    - run: echo `ls`
    - run: echo `pwd`
    - run: cat ./.github/workflows/p.json
    - run: node ./.github/workflows/t.js
    - id: set_var
      run: |
        content=`node ./.github/workflows/t.js`
        echo "::set-output name=packageJson::$content"
    - run: |
        echo "${{steps.set_var.outputs.packageJson}}"
    - id: set-matrix
      # run: echo "::set-output name=matrix::{\"include\":[{\"project\":\"foo\",\"config\":\"Debug\"},{\"project\":\"bar\",\"config\":\"Release\"}]}"
      # run: echo "::set-output name=matrix::$(node ./.github/workflows/t.js)"
      run: echo "::set-output name=matrix::$(zx ./.github/workflows/script.mjs)"
      # run: echo "::set-output name=matrix::$(bash s.sh)"
      # run: echo "::set-output name=matrix::$(fromJson(steps.set_var.outputs.packageJson))"
  job2:
    needs: job1
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{fromJson(needs.job1.outputs.matrix)}}
    steps:
    - run: echo ${{ matrix.project }}
    - run: echo ${{ matrix.config }}
